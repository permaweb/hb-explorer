export const language = {
	en: {
		action: `Action`,
		app: `HyperBEAM`,
		apply: `Apply`,
		applyFilters: `Apply Filters`,
		aoLegacynet: `AO Legacynet`,
		aoMainnet: `AO Mainnet`,
		aos: `AOS`,
		appearance: `Appearance`,
		associatedMessagesInfo: `Associated messages will display here`,
		associatedMessagesLoading: `Getting associated messages`,
		associatedMessagesNotFound: `No associated messages found`,
		bio: `Bio`,
		blockHeight: `Block Height`,
		byAction: `By Action`,
		cancel: `Cancel`,
		checking: `Checking`,
		chooseAppAppearance: `Choose Appearance`,
		clearTabs: `Clear Tabs`,
		close: `Close`,
		closeEditor: `Close Editor`,
		connect: `Connect`,
		connectWallet: `Connect your wallet`,
		connectToAOS: `Connect to AOS`,
		connectToContinue: `Connect your wallet to continue`,
		console: `Console`,
		copied: `Copied`,
		copyFullUrl: `Copy URL`,
		copyId: `Copy ID`,
		copyJSON: `Copy JSON`,
		copyPath: `Copy Path`,
		create: `Create`,
		createProfile: `Create your profile`,
		current: `Current`,
		currentOutput: `Current Output`,
		customAction: `Custom Action`,
		dashboard: `Dashboard`,
		data: `Data`,
		dateCreated: `Date Created`,
		delete: `Delete`,
		disconnect: `Disconnect`,
		dismiss: `Dismiss`,
		done: `Done`,
		download: `Download`,
		edit: `Edit`,
		editProfile: `Edit your profile`,
		enterFullScreen: `Enter Full Screen`,
		errorUpdatingProfile: `Error updating profile`,
		errorFetchingTx: `Error getting transaction`,
		errorOccurred: `Error occurred`,
		exitFullScreen: `Exit Full Screen`,
		explorer: `Explorer`,
		fetching: `Fetching`,
		filter: `Filter`,
		filterBy: `Filter by`,
		from: `From`,
		goBack: `Go Back`,
		goTo: `Go To`,
		handle: `Handle`,
		headers: `Headers`,
		healthy: `Healthy`,
		hideResults: `Hide Results`,
		id: `ID`,
		incoming: `Incoming`,
		input: `Input`,
		language: `Language`,
		load: `Load`,
		loading: `Loading`,
		maxCharsReached: `Max chars reached`,
		message: `Message`,
		messages: `Messages`,
		messageFilters: `Message Filters`,
		messageInfo: `Message Info`,
		name: `Name`,
		network: `Network`,
		new: `New`,
		newTab: `New Tab`,
		next: `Next`,
		nodes: `Nodes`,
		none: `None`,
		noData: `No Data`,
		noDataToDisplay: `No data to display`,
		openEditor: `Open Editor`,
		openInNewTab: `Open in new tab`,
		outgoing: `Outgoing`,
		output: `Output`,
		overview: `Overview`,
		owner: `Owner`,
		page: `Page`,
		pageNotFound: `Page not found`,
		pathNotFound: `Path not found`,
		pathOrId: `Path or ID`,
		previous: `Previous`,
		processId: `Process ID`,
		processOrMessageId: `Process or Message ID`,
		processOrMessageTagsInfo: `Process or Message tags will display here`,
		profile: `Profile`,
		profileCreated: `Profile created`,
		profileCreatingInfo: `Creating your profile`,
		profileMenu: `Profile menu`,
		profileUpdated: `Profile updated`,
		profileUpdatingInfo: `Updating your profile`,
		read: `Read`,
		recipient: `Recipient`,
		refresh: `Refresh`,
		remove: `Remove`,
		removeAvatar: `Remove Avatar`,
		removeBanner: `Remove Banner`,
		response: `Response`,
		result: `Result`,
		results: `Results`,
		resultsPerPage: `Results per page`,
		resultingMessagesInfo: `Resulting messages will display here`,
		run: `Run`,
		runForResponse: `Run to get a response`,
		save: `Save`,
		sender: `Sender`,
		sidebarClose: `Close sidebar`,
		sidebarOpen: `Open sidebar`,
		size: `Size`,
		search: `Search`,
		searching: `Searching`,
		showResults: `Show Results`,
		showingRange: (start: number, end: number, total: number) => `Showing ${start} - ${end} of ${total}`,
		slot: `Slot`,
		sortNewestToOldest: `Newest to Oldest`,
		sortOldestToNewest: `Oldest to Newest`,
		source: `Source`,
		submit: `Submit`,
		tabsDeleteConfirmationInfo: `Are you sure you want to clear your tabs ?`,
		tags: `Tags`,
		themes: `Themes`,
		time: `Time`,
		timestamp: `Timestamp`,
		to: `To`,
		top: `Top`,
		txNotFound: `Transaction not found`,
		type: `Type`,
		unhealthy: `Unhealthy`,
		untitled: `Untitled`,
		updating: `Updating`,
		uploadAvatar: `Upload avatar`,
		uploadBanner: `Upload banner`,
		view: `View`,
		walletAddress: `Wallet Address`,
		write: `Write`,
		yourProcesses: `Your processes`,
	},
};
